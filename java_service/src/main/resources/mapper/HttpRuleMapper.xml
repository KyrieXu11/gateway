<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyriexu.dao.HttpRuleDao">
    <insert id="add" parameterType="com.kyriexu.model.HttpRule">
        insert into gateway_service_http_rule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="httpRule.serviceId != null">
                service_id,
            </if>
            rule_type,
            <if test="httpRule.rule != null">
                rule,
            </if>
            need_https,
            need_strip_uri,
            need_websocket,
            <if test="httpRule.urlRewrite != null">
                url_rewrite,
            </if>
            <if test="httpRule.headerTransfor != null">
                header_transfor,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="httpRule.serviceId != null">
                #{httpRule.serviceId},
            </if>
            #{httpRule.ruleType},
            <if test="httpRule.rule != null">
                #{httpRule.rule},
            </if>
            #{httpRule.needHttps},
            #{httpRule.needStripUri},
            #{httpRule.needWebsocket},
            <if test="httpRule.urlRewrite != null">
                #{httpRule.urlRewrite},
            </if>
            <if test="httpRule.headerTransfor != null">
                #{httpRule.headerTransfor},
            </if>
        </trim>
    </insert>
    <update id="updateHttpRule" parameterType="com.kyriexu.model.HttpRule">
        update gateway_service_http_rule
        <set>
            <trim suffixOverrides=",">
                rule_type #{httpRule.ruleType},
                <if test="httpRule.rule != null">
                    rule = #{httpRule.rule},
                </if>
                need_https = #{httpRule.needHttps},
                need_strip_uri = #{httpRule.needStripUri},
                need_websocket = #{httpRule.needWebsocket},
                <if test="httpRule.urlRewrite != null">
                    url_rewrite = #{httpRule.urlRewrite},
                </if>
                <if test="httpRule.headerTransfor != null">
                    header_transfor = #{httpRule.headerTransfor},
                </if>
            </trim>
        </set>
        <where>
            service_id = #{httpRule.serviceId}
        </where>
    </update>

    <select id="get" resultType="com.kyriexu.model.HttpRule">
        select *
        from gateway_service_http_rule
        where service_id = #{serviceId};
    </select>
    <select id="getByRuleTypeAndRule"
            resultType="com.kyriexu.model.HttpRule">
        select *
        from gateway_service_http_rule
        where rule_type = #{ruleType}
          and rule = #{rule};
    </select>
</mapper>